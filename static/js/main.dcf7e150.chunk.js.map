{"version":3,"sources":["Todo.js","Todolist.js","App.js","index.js"],"names":["Todo","todo","toggletodos","Checkbox","color","checked","complete","onChange","id","name","Todolist","todos","map","key","App","useState","setTodos","TodoRef","useRef","useEffect","savedtodos","JSON","parse","localStorage","getItem","setItem","stringify","className","TextField","inputRef","label","defaultValue","variant","ButtonGroup","aria-label","Button","onClick","e","current","value","prev","uuidv4","tokeep","filter","length","alltodos","chtodo","find","ReactDOM","render","document","getElementById"],"mappings":"iOAGe,SAASA,EAAT,GAAsC,IAAtBC,EAAqB,EAArBA,KAAOC,EAAc,EAAdA,YAKlC,OACI,6BACI,+BACI,kBAACC,EAAA,EAAD,CAAUC,MAAM,UAAUC,QAASJ,EAAKK,SAAUC,SAN9D,WACIL,EAAYD,EAAKO,OAMRP,EAAKQ,O,MCTP,SAASC,EAAT,GAA2C,IAAvBC,EAAsB,EAAtBA,MAAQT,EAAc,EAAdA,YACvC,OACIS,EAAMC,KAAI,SAAAX,GACN,OAAO,kBAACD,EAAD,CAAME,YAAaA,EAAaW,IAAKZ,EAAKO,GAAIP,KAAMA,O,4CCkExDa,MA7Df,WAAgB,IAAD,EACUC,mBAAS,IADnB,mBACNJ,EADM,KACAK,EADA,KAEPC,EAAQC,mBAgCd,OA/BAC,qBAAU,WACR,IAAMC,EAAWC,KAAKC,MAAMC,aAAaC,QANrB,mBAOhBJ,GAEFJ,EAASI,KAEX,IAQFD,qBAAU,WACRI,aAAaE,QApBO,iBAoBoBJ,KAAKK,UAAUf,MACvD,CAACA,IAgBD,yBAAKH,GAAG,QAAQmB,UAAU,0CACxB,yCACE,kBAACC,EAAA,EAAD,CACEpB,GAAG,iBACHqB,SAAYZ,EACZa,MAAM,aACNC,aAAa,GACbC,QAAQ,aAEZ,2BACA,kBAACC,EAAA,EAAD,CAAa7B,MAAM,UAAU8B,aAAW,iCACxC,kBAACC,EAAA,EAAD,CAAQC,QArBZ,SAAoBC,GAClB,IAAM5B,EAAKQ,EAAQqB,QAAQC,MAChB,KAAP9B,IACJO,GAAS,SAAAwB,GACP,MAAM,GAAN,mBAAYA,GAAZ,CAAiB,CAAChC,GAAGiC,cAAUhC,KAAKA,EAAOH,UAAS,QAEtDW,EAAQqB,QAAQC,MAAM,QAepB,OAGA,kBAACJ,EAAA,EAAD,CAAQC,QA5BZ,WACE,IAAMM,EAAO/B,EAAMgC,QAAO,SAAA1C,GAAI,OAAKA,EAAKK,YACxCU,EAAS0B,KA0BP,YAKA,4BAAK/B,EAAMgC,QAAO,SAAA1C,GAAI,OAAKA,EAAKK,YAAUsC,OAA1C,sBACA,kBAAClC,EAAD,CAAUR,YA5Cd,SAAqBM,GACnB,IAAMqC,EAAS,YAAIlC,GACbmC,EAAOD,EAASE,MAAK,SAAAD,GAAM,OAAIA,EAAOtC,KAAKA,KACjDsC,EAAOxC,UAAUwC,EAAOxC,SACxBU,EAAS6B,IAwC6BlC,MAAOA,MC9DjDqC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.dcf7e150.chunk.js","sourcesContent":["import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport default function Todo({ todo , toggletodos}) {\r\n    \r\n    function handleclick(){\r\n        toggletodos(todo.id)\r\n    }\r\n    return (\r\n        <div>\r\n            <label>\r\n                <Checkbox color='primary' checked={todo.complete} onChange={handleclick} />\r\n                {todo.name}\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\nimport 'tachyons'\r\nexport default function Todolist({ todos , toggletodos}) {\r\n    return (\r\n        todos.map(todo => {\r\n            return <Todo toggletodos={toggletodos} key={todo.id} todo={todo} />\r\n        })\r\n        \r\n    )\r\n}\r\n","import React,{ useState,useRef,useEffect } from 'react';\r\nimport Todolist from './Todolist';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './App.css'\r\nimport 'tachyons'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nconst LOCAL_STORAGE_KEY='revision.todos'\r\n\r\nfunction App() {\r\n  const [todos,setTodos]=useState([])\r\n  const TodoRef=useRef()\r\n  useEffect(() => {\r\n    const savedtodos=JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n    if (savedtodos)\r\n    {\r\n      setTodos(savedtodos)\r\n    }\r\n  },[])\r\n\r\n  function toggletodos(id){\r\n    const alltodos=[...todos];\r\n    const chtodo=alltodos.find(chtodo => chtodo.id===id);\r\n    chtodo.complete=!chtodo.complete;\r\n    setTodos(alltodos);\r\n  }\r\n  useEffect(() => {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\r\n  },[todos])\r\n\r\n  function removecompleted(){\r\n    const tokeep=todos.filter(todo => !todo.complete);\r\n    setTodos(tokeep)\r\n  }\r\n  function handleTodo(e){\r\n    const name=TodoRef.current.value\r\n    if (name===''){return}\r\n    setTodos(prev => {\r\n      return ([...prev,{id:uuidv4(), name:name,  complete:false}])\r\n    })\r\n    TodoRef.current.value=null\r\n\r\n  }\r\n  return  (\r\n    <div id=\"total\" className='tc center dtc v-mid tc white ph3 ph4-l'>\r\n      <h1>TODO LIST</h1>\r\n        <TextField\r\n          id=\"outlined-basic\" \r\n          inputRef\t= {TodoRef}\r\n          label=\"Enter task\"\r\n          defaultValue=\"\"\r\n          variant=\"outlined\"\r\n        />\r\n      <p>\r\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n      <Button onClick={handleTodo}>\r\n        Add\r\n      </Button>\r\n      <Button onClick={removecompleted}>\r\n        Delete\r\n      </Button>\r\n      </ButtonGroup>\r\n      </p>\r\n      <h4>{todos.filter(todo => !todo.complete).length} tasks to complete</h4>\r\n      <Todolist toggletodos={toggletodos} todos={todos}/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}